(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const s=a(377),{lightningChart:o,SolidFill:l,ColorRGBA:n,AxisTickStrategies:r,AxisScrollStrategies:i,PointStyle3D:c,PalettedFill:d,LUT:h,emptyLine:u,AutoCursorModes:m,emptyFill:y,LegendPosition:p,Themes:x,DataSetXY:g}=s,f=document.getElementById("chart")||document.body;f===document.body&&(f.style.width="100vw",f.style.height="100vh",f.style.margin="0px"),f.style.display="flex",f.style.flexDirection="row";const v=document.createElement("div");v.style.width="50%",v.style.height="100%",f.append(v);const S=document.createElement("div");S.style.width="50%",S.style.height="100%",f.append(S);const w=[{x:0,y:1.04,z:.42,value:120,name:"AF3",history:[]},{x:0,y:1.1,z:0,value:120,name:"AF4",history:[]},{x:.1,y:.8,z:-.56,value:120,name:"F5",history:[]},{x:.45,y:.7,z:-.2,value:120,name:"F6",history:[]},{x:.5,y:.7,z:.3,value:120,name:"FC5",history:[]},{x:.32,y:.8,z:.6,value:120,name:"FC6",history:[]},{x:-.1,y:.8,z:-.56,value:120,name:"T7",history:[]},{x:-.45,y:.7,z:-.2,value:120,name:"CP5",history:[]},{x:-.5,y:.7,z:.3,value:120,name:"CP6",history:[]},{x:-.32,y:.8,z:.6,value:120,name:"O2",history:[]}],b=o({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}),M=new h({interpolate:!0,steps:[{value:-500,color:n(255,0,255),label:"Min"},{value:0,color:n(0,0,255),label:""},{value:500,color:n(0,150,255),label:""},{value:1e3,color:n(0,100,100),label:""},{value:1500,color:n(0,255,150),label:""},{value:2e3,color:n(0,255,0),label:""},{value:4e3,color:n(155,150,0),label:""},{value:9e3,color:n(255,0,0),label:"Max"}]}),A=new d({lookUpProperty:"value",lut:M}),k=b.Chart3D({container:S,legend:{position:p.BottomCenter,addEntriesAutomatically:!1},theme:x[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("").setSeriesBackgroundFillStyle(y).setSeriesBackgroundStrokeStyle(u).setCursorMode(void 0).setUserInteractions({restoreDefault:!1});k.legend.add(M,{text:"Brain",lutLength:250});const C=b.ChartXY({legend:{visible:!1},container:v}).setTitle(""),F=(C.getDefaultAxisX().setScrollStrategy(i.scrolling).setDefaultInterval(e=>({end:e.dataMax??0,start:(e.dataMax??0)-15e3,stopAxisAfter:!1})).setTickStrategy(r.Time).setIntervalRestrictions(e=>({endMin:e.dataMax,endMax:e.dataMax})),new g({schema:{x:{pattern:"progressive"},...Object.fromEntries(w.map((e,t)=>[`ch${t}`,{pattern:null}]))}}).setMaxSampleCount(1e5));C.getDefaultAxisY().dispose(),w.map((e,t)=>{const a=w.length-(t+1),s=C.addAxisY({iStack:a}).setTitle(e.name).setTitleRotation(0).setStrokeStyle(u).setDefaultInterval({start:-5e3,end:9500,stopAxisAfter:!1}).setScrollStrategy(i.expansion).setTickStrategy(r.Empty);return{axisY:s,series:C.addLineSeries({automaticColorIndex:t,yAxis:s}).setName(e.name).setDataSet(F,{x:"x",y:`ch${t}`})}}),k.getDefaultAxes().forEach(e=>e.setPointerEvents(!1).setInterval({start:-1,end:1}).setTickStrategy(r.Empty).setStrokeStyle(u)),k.setCameraAutomaticFittingEnabled(!1).setCameraLocation({x:.5,y:.4,z:1});const U=k.addPointSeries({individualLookupValuesEnabled:!0}).add(w).setPointStyle(new c.Triangulated({fillStyle:A,size:10,shape:"sphere"})),z=k.addMeshModel().setScale(.26).setModelLocation({x:0,y:0,z:0}).setModelAlignment({x:0,y:-1,z:.2}).setName("Brain"),E=k.addMeshModel().setName("Head").setScale(2).setFillStyle(new l({color:n(255,255,255,90)})).setBackfaceCullingMode("cull-back");function R(e){return fetch(new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+e).then(t=>{if(!t.ok)throw new Error(`Failed to fetch ${e}`);return t.text()})}Promise.all([R("examples/assets/1503/brain.obj"),R("examples/assets/1503/head.obj"),(async()=>{const e=await fetch(new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"examples/assets/1503/CutData3.bin"),t=await e.blob(),a=await t.arrayBuffer(),s=new Int16Array(a),o=[];for(let e=0;e<s.length;e+=5e4){const t=s.slice(e,e+5e4);o.push(t)}return o})()]).then(e=>{const t=e[2];z.setModelFromObj(e[0]).setFillStyle(A),E.setModelFromObj(e[1]).setPointerEvents(!1);const a=[];z.setVertexValues(e=>{const t=[];for(let s=0;s<e.length;s+=1){const o=k.translateCoordinate(e[s],k.coordsWorld,k.coordsAxis),l=new Array(w.length).fill(0);let n=0;w.forEach((e,t)=>{const a=e.x-o.x,s=e.y-o.y,r=e.z-o.z,i=Math.sqrt(a**2+s**2+r**2),c=0!==i?1/i**3:1;l[t]=c,n+=c}),a.push({sumOfWeights:n,sensorWeights:l});const r=w.reduce((e,t,a)=>e+t.value*l[a],0)/n;t.push(r)}return t});let s=window.performance.now(),o=0;const l=()=>{const e=window.performance.now(),n=Math.floor(1e3*(e-s)/1e3),r=Math.min(n-o,1e3);if(r>0){const e={x:[],...Object.fromEntries(w.map((e,t)=>[`ch${t}`,[]]))};for(let a=0;a<r;a++){const s=1*(o+a);e.x.push(s);for(let s=0;s<w.length;s++){const l=t[s],n=l[(o+a)%l.length];e[`ch${s}`].push(n),w[s].history.push(n)}}w.forEach(e=>{for(;e.history.length>100;)e.history.shift();const t=e.history.reduce((e,t)=>e+t,0)/e.history.length;e.value=t}),F.appendSamples(e),o+=r,U.clear().add(w);const s=[];z.setVertexValues(e=>{for(let t=0;t<e.length;t+=1){const{sumOfWeights:e,sensorWeights:o}=a[t],l=w.reduce((e,t,a)=>e+t.value*o[a],0)/e||20;s.push(l)}return s})}requestAnimationFrame(l)};l()})}},e=>{e.O(0,[502],()=>e(e.s=44)),e.O()}]);